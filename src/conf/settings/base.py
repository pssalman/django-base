"""
Django settings for conf project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import sys
import os
import socket
from environs import Env

DATE_INPUT_FORMATS = ('%d-%m-%Y', '%Y-%m-%d')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
DJANGO_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(DJANGO_ROOT)
SITE_NAME = os.path.basename(DJANGO_ROOT)
PUBLIC_ROOT = os.path.join(PROJECT_ROOT, 'public')
RUN_ROOT = os.path.join(PROJECT_ROOT, 'run')
LOGGING_ROOT = os.path.join(PROJECT_ROOT, 'logs')
ENVIRONMET_ROOT = os.path.join(
    os.path.dirname(PROJECT_ROOT), 'environments', 'django')

sys.path.append(os.path.normpath(os.path.join(PROJECT_ROOT, 'apps')))
sys.path.append(os.path.normpath(
    os.path.join(PROJECT_ROOT, 'apps', 'common')))

env = Env()
env.read_env(os.path.join(
    ENVIRONMET_ROOT,
    f"{os.environ.get('ENV', 'local')}", '.env'),
    recurse=False
)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("APP_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("APP_DEBUG")

ADMINS = [
    ("pssalman", "anton.salman@gmail.com"),
]

MANAGERS = ADMINS

ALLOWED_HOSTS = []

INTERNAL_IPS = [
    '127.0.0.1',
]

# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.humanize',
    'django.contrib.staticfiles',
    'django.contrib.flatpages',
    'django.contrib.admindocs',
    'django.contrib.sitemaps',
]

THIRD_APPS = [
    'gunicorn',
    'compressor',
    'corsheaders',
    #'captcha',
    #'django_celery_results',
    #'rosetta',
]

COMMON_APPS = [
    'core.apps.CoreConfig',
]

INSTALLED_APPS = DJANGO_APPS + THIRD_APPS + COMMON_APPS


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = f'{SITE_NAME}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_ROOT, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django.template.context_processors.static',
                'django.template.context_processors.media',
                'django.template.context_processors.tz',
            ],
        },
    },
]

WSGI_APPLICATION = f"{SITE_NAME}.wsgi.application"

LOCAL_IP = str(socket.gethostbyname(socket.gethostname()))


print('hostname: ' + socket.gethostname())
print('hostbyip: ' + LOCAL_IP)

APPEND_SLASH = True

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jerusalem'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Tell Django where the project's translation files should be.
LOCALE_PATHS = (
    os.path.join(PROJECT_ROOT, 'locale'),
)

SITE_ID = 1

SECURE_HSTS_PRELOAD = True

PREPEND_WWW = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # other finders..
    'compressor.finders.CompressorFinder',
]
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(PUBLIC_ROOT, 'static')
STATICFILES_DIRS = [
    os.path.join(PROJECT_ROOT, 'static'),
]

COMPRESS_ROOT = os.path.join(PUBLIC_ROOT, 'compress')
COMPRESS_ENABLED = True

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(PUBLIC_ROOT, 'media')